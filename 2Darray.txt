**********2D Array**********************************
Topics
 Multidimensional array
2D Array  
Multiplication of two Matrics 

* Multidimensional array  -> Array of array

Syntax of array :
int [][] a=new int[5][6]'

array literals int [][]arr2={{1,2},{3,4}}

for print 2Darray 
static void print(int[][]arr){
  for(int i=0; i<arr.length; i++){
	for(int j=0; j<arr[i].length; j++){
		println(arr[i][j]+"");
}
}
}

----> this is small example of 2d array

import java.util.*;
class Main {
    static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("enter rows");
        int r=sc.nextInt();
        System.out.println("enter coloums");
          int c=sc.nextInt();
            System.out.println("enter "+ r*c +"elements");
          int [][] arr=new int[r][c];
           for(int i=0; i<r; i++){
           for(int j=0; j<c; j++){
               arr[i][j]=sc.nextInt();
           }
           }
        
        print(arr);
    }
}

output
enter rows
2 
enter coloums
2
enter 4elements
1 2 
3 4
1 2 
3 4 

Why multidimensional array?
Graphs 
grids
fast and easy access


****
Addition of matrices
only matrices with same dimesions

import java.util.*;
class Main {
    static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
    static void add(int[][]a,int r1,int c1,int[][]b,int r2,int c2){
        if(r1 !=r2 || c1!=c2){
             System.out.println("wrong input");
             return;
        }
        int [][]sum =new int [r1][c1];
        for(int i=0; i<r1; i++){
            for(int j=0; j<c1; j++){
                sum[i][j]=a[i][j]+b[i][j];
            }
        }
        System.out.println("sum of matrix 1 & 2");
        print(sum);
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
         System.out.println("enter no of rows and columns of matrix 1");
         int r1=sc.nextInt();
         int c1=sc.nextInt();
         int [][]a=new int [r1][c1];
          System.out.println("enter matrix values");
           for(int i=0; i<r1; i++){
           for(int j=0; j<c1; j++){
               a[i][j]=sc.nextInt();
           }
           }
           System.out.println("enter no of rows and columns of matrix 2");
         int r2=sc.nextInt();
         int c2=sc.nextInt();
         int [][]b=new int [r2][c2];
          System.out.println("enter matrix values");
           for(int i=0; i<r2; i++){
           for(int j=0; j<c2; j++){
               b[i][j]=sc.nextInt();
           }
           }
           System.out.println("matrix 1");
           print(a);
           System.out.println("matrix 2");
           print(b);
        
      
        add(a,r1,c1,b,r2,c2);
        
        
        
    } 
    }

output
enter no of rows and columns of matrix 1
2 2
enter matrix values
1 2 
3 4
enter no of rows and columns of matrix 2
2 2
enter matrix values
5 6
7 8
matrix 1
1 2 
3 4 
matrix 
5 6 
7 8 
sum of matrix 1 & 2
6 8 
10 12 
 

Write a program to display multiplication two matrices enterd by the user
multiplication restriction
1 st matrix no of column is equal to  2nd matrix matrix no of rows
2 *4
4 *3 
both are true 
answer will be in  [2*3] 
[r1*c1]*[r2*c2]=[r1*c2]



import java.util.*;
class Main{
    static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
    static void multiply(int[][]a,int r1,int c1,int[][]b,int r2,int c2){
        if(c1 !=r2){
             System.out.println("mul not posiible");
             return;}
        
           int[][] mul = new int[r1][c2];

        for (int i = 0; i < r1; i++) {
            for (int j = 0; j < c2; j++) {
                for (int k = 0; k < c1; k++) {
                    mul[i][j] += a[i][k] * b[k][j];
                }
            }
        }

    
        System.out.println("mul of matrix  2");
        print(mul);
    }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
         System.out.println("enter no of rows and columns of matrix 1");
         int r1=sc.nextInt();
         int c1=sc.nextInt();
         int [][]a=new int [r1][c1];
          System.out.println("enter matrix values");
           for(int i=0; i<r1; i++){
           for(int j=0; j<c1; j++){
               a[i][j]=sc.nextInt();
           }
           }
           System.out.println("enter no of rows and columns of matrix 2");
         int r2=sc.nextInt();
         int c2=sc.nextInt();
         int [][]b=new int [r2][c2];
          System.out.println("enter matrix values");
           for(int i=0; i<r2; i++){
           for(int j=0; j<c2; j++){
               b[i][j]=sc.nextInt();
           }
           }
           System.out.println("matrix 1");
           print(a);
           System.out.println("matrix 2");
           print(b);
        
      
        //add(a,r1,c1,b,r2,c2);
        multiply(a,r1,c1,b,r2,c2);
        
        
    } 
    }
    
output:
enter no of rows and columns of matrix 1
2 3
enter matrix values
1 2 3
4 5 6
enter no of rows and columns of matrix 2
3 4
enter matrix values
1 2 3 4
4 5 6 7 
8 9 10 11
matrix 1
1 2 3 
4 5 6 
matrix 2
1 2 3 4 
4 5 6 7 
8 9 10 11 
mul of matrix  2
33 39 45 51 
72 87 102 117 

2D array problem - 1

Transpose of matrix
rotation of matrix
pascal triangle

import java.util.*;

class Main {
  static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
  static int[][] findtranspose(int [][]mat,int r,int c){
        int [][]ans=new int [c][r];
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                ans[j][i]=mat[i][j];
            }
        }
        return ans;
        
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int [][]matrix=new int [r][c];
        int total=r*c;
        System.out.println("enter"+total+"elements");
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                matrix[i][j]=sc.nextInt();
            }
        }
        System.out.println("input matrix");
        print(matrix);
        System.out.println("tarnspose matrix");
        int[][] ans=findtranspose(matrix,r,c);
         print(ans);
    }
}

****inplace***** (this only for square matrix) 
 static void findtransposeinplace(int [][]mat,int r,int c){
        for(int i=0; i<c; i++){
            for(int j=i; j<r; j++){
                int temp=mat[i][j];
                mat[i][j]=mat[j][i];
                mat[j][i]=temp;
            }
        }
    
    }

***********************Rotate the array ****************************
import java.util.*;

class Main {
  static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
   
    static void reversearray(int []arr){
        int i=0, j=arr.length-1;
        while(i <j){
                int temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
                i++;
                j--;
        }
    }
    static void findtransposeinplace(int [][]mat,int r,int c){
        for(int i=0; i<c; i++){
            for(int j=i; j<r; j++){
                int temp=mat[i][j];
                mat[i][j]=mat[j][i];
                mat[j][i]=temp;
            }
        }
    
     }
     static void rotate(int [][]matrix ,int n){
         findtransposeinplace(matrix,n,n);
         for(int i=0; i<n; i++){
             reversearray(matrix[i]);
         }
     }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int [][]matrix=new int [r][c];
        int total=r*c;
        System.out.println("enter"+total+"elements");
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                matrix[i][j]=sc.nextInt();
            }
        }
        System.out.println("input matrix");
        print(matrix);
        System.out.println("tarnspose matrix");
        // findtransposeinplace(matrix,r,c);
        // print(matrix);
        //int[][] ans=findtranspose(matrix,r,c);\
        rotate(matrix,r);
        
         print(matrix);
    }
}
 
pascal sum
import java.util.*;

class Main {
  static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
   
   static int [][]pascal(int n){
       int [][]ans=new int [n][];
       for(int i=0; i<n; i++){
           ans[i]  =new int[i+1];
           ans[i][0]=ans[i][i]=1;
           for(int j=1; j<i; j++){
               ans[i][j]=ans[i-1][j]+ans[i-1][j-1];
           }
       }
       return ans;
   }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

       System.out.println("enter n");
       int n=sc.nextInt();
       int [][]ans=pascal(n);
       print(ans);
    }
}
enter n
5
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 

=== Code Execution Successful ===

2D Array problem 3

Today checklist
*Spiral Order Traversal
*Generate matrix in spiral order

---------
|-----	|
|    |	|  spiral order
-------	|

import java.util.*;
class Main {
     static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
    static void printspiralorder(int[][]matrix,int r,int c){
        int toprow=0, bottomrow=r-1,leftcol=0,rightcol=c-1;
        int total=0;
        while(total<r*c){
            //toprow ->leftcol to rightcol
            for(int  j=leftcol; j<=rightcol && total <r*c; j++){
                System.out.print(matrix[toprow][j]+" ");
                total++;
            }
            toprow++;
            //rigthcol -> toprow to bottomrow
            for(int i=toprow; i<=bottomrow && total <r*c; i++){
                System.out.print(matrix[i][rightcol]+" ");
                total++;
            }
            rightcol--;
            //bottomrow -> rigthcol to leftcol
            for(int j=rightcol; j>=leftcol && total <r*c; j--){
                System.out.print(matrix[bottomrow][j]+" ");
                total++;
            }
            bottomrow--;
            //leftcol -> bottom to toprow
            for(int i=bottomrow; i>=toprow && total <r*c; i--){
                System.out.print(matrix[i][leftcol]+" ");
                total++;
            }
            leftcol++;
        }
    }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int [][]matrix=new int [r][c];
        int total=r*c;
        System.out.println("enter"+total+"elements");
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                matrix[i][j]=sc.nextInt();
            }
        }
        System.out.println("input matrix");
        print(matrix);
        System.out.println("spiral order");
         printspiralorder(matrix,r,c);
    
    }
}

output
3 4
enter12elements 
1 2 3 4
5 6 7 8
9 10 11 12
input matrix
1 2 3 4 
5 6 7 8 
9 10 11 12 
spiral order
1 2 3 4 8 12 11 10 9 5 6 7 

create matrix in spiral order 
import java.util.*;
class Main {
     static void print(int arr[][]){
        for(int i=0; i<arr.length; i++){
           for(int j=0; j<arr[i].length; j++){
              System.out.print(arr[i][j]+" "); 
        }
         System.out.println();
    }
    }
    static int[][] genrate(int n){
        int [][]matrix=new int [n][n];
        int toprow=0, bottomrow=n-1,leftcol=0,rightcol=n-1;
        int curr=1;
        while(curr<=n*n){
            //toprow ->leftcol to rightcol
            for(int  j=leftcol; j<=rightcol && curr<=n*n; j++){
                matrix[toprow][j]=curr++;
                
            }
            toprow++;
            //rigthcol -> toprow to bottomrow
            for(int i=toprow; i<=bottomrow && curr<=n*n; i++){
            matrix[i][rightcol]=curr++;
            }
            rightcol--;
            //bottomrow -> rigthcol to leftcol
            for(int j=rightcol; j>=leftcol && curr<=n*n; j--){
                matrix[bottomrow][j]=curr++;
            }
            bottomrow--;
            //leftcol -> bottom to toprow
            for(int i=bottomrow; i>=toprow && curr <=n*n; i--){
            matrix[i][leftcol]=curr++;
            }
            leftcol++;
        }
        return matrix;
    }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

       System.out.println("enter n");
       int n=sc.nextInt();
       int [][]matrix=genrate(n);
       print(matrix);

    
    }
}

2D arrays problem 3
sum of rectangle using brute force
sum of rectangle using pre calculating the horizontal sum of each row
sum of rectangle using prefix sum over both rows and col

1) basic approach
import java.util.*;
class Main {
        static int findsum(int [][]matrix,int l1,int r1,int l2,int r2){
            int sum=0;
            for(int i=l1; i<=l2; i++ ){
                for(int j=r1; j<=r2; j++){
                    sum+=matrix[i][j];
                }
            }
        
        return sum;
        }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int [][]matrix=new int [r][c];
        int total=r*c;
        System.out.println("enter"+total+"elements");
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                matrix[i][j]=sc.nextInt();
            }
        }
        System.out.println("enter rectangle boundries l1,r1,l2,r2");
        int l1=sc.nextInt();
        int r1=sc.nextInt();
        int l2=sc.nextInt();
        int r2=sc.nextInt();
        System.out.println("Rectangle sum"+findsum(matrix,l1,r1,l2,r2));

}
}

2)secnd appraoch
static void findprefixsum(int[][]matrix){
        int r=matrix.length;
        int c=matrix[0].length;
        for(int i=0; i<r; i++){
            for(int j=1; j<c; j++){
                matrix[i][j]+= matrix[i][j-1];
            }
        }
    }
    static int findsum2(int [][]matrix,int l1,int r1,int l2,int r2){
        int sum=0;
        findprefixsum(matrix);
        for(int i=l1; i<=l2; i++){
            if(r1>=1)
                sum+=matrix[i][r2]-matrix[i][r1-1];
            else
                sum+=matrix[i][r2];
        }
        return sum;
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int [][]matrix=new int [r][c];
        int total=r*c;
        System.out.println("enter"+total+"elements");
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                matrix[i][j]=sc.nextInt();
            }
        }
        System.out.println("enter rectangle boundries l1,r1,l2,r2");
        int l1=sc.nextInt();
        int r1=sc.nextInt();
        int l2=sc.nextInt();
        int r2=sc.nextInt();
        System.out.println("Rectangle sum"+findsum2(matrix,l1,r1,l2,r2));

    }
}


3)perect approach
//calcuate row wise and column wise sum
    //matrix[i][j]=sumofrectnagle((0,0)(i,j))
    static void findprefixsum(int[][]matrix){
        int r=matrix.length;
        int c=matrix[0].length;
        for(int i=0; i<r; i++){
            for(int j=1; j<c; j++){
                matrix[i][j]+= matrix[i][j-1];
            }
        }
        //traverse vrtically to caluclate coloumn eise sum
        for(int j=0; j<c;j++){
            for(int i=1; i<r; i++){
                matrix[i][j]+=matrix[i-1][j];
            }
        }
    }
    static int findsum2(int [][]matrix,int l1,int r1,int l2,int r2){
        int sum=0;
        findprefixsum(matrix);
        for(int i=l1; i<=l2; i++){
            if(r1>=1)
                sum+=matrix[i][r2]-matrix[i][r1-1];
            else
                sum+=matrix[i][r2];
        }
        return sum;
    }
    static int findsum3(int [][]matrix,int l1,int r1,int l2,int r2) {
        int ans = 0;
        findprefixsum(matrix);
        int sum = 0, up = 0, left = 0, leftup = 0;

        sum = matrix[l2][r2];
        if (r1 >= 1) {
            left = matrix[l2][r1 - 1];
        }
        if (l1 >= 1) {
            up = matrix[l1 - 1][r2];
        }
        if (l1 >= 1 && r1 >= 1) {
            leftup = matrix[l1 - 1][r1 - 1];

        }
        ans=sum-up-left+leftup;
        return ans;
    }


    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int c=sc.nextInt();
        int [][]matrix=new int [r][c];
        int total=r*c;
        System.out.println("enter"+total+"elements");
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                matrix[i][j]=sc.nextInt();
            }
        }
        System.out.println("enter rectangle boundries l1,r1,l2,r2");
        int l1=sc.nextInt();
        int r1=sc.nextInt();
        int l2=sc.nextInt();
        int r2=sc.nextInt();
        System.out.println("Rectangle sum"+findsum3(matrix,l1,r1,l2,r2));

    }
}


